{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","react_default","a","createElement","className","content","onClick","services_notes","nonExisting","id","date","important","axios","get","then","response","data","concat","newObject","post","put","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","message","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Math","random","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.56e0eced.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    return(\n        <li className='note'>{note.content} \n        <button onClick={toggleImportance}>change importance</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const nonExisting = {\n    id: 10000,\n    content: 'Tätä muistiinpanoa ei ole palvelimelta',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true\n  }\n\n  return axios.get(baseUrl).then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('virhe...')\n\n  useEffect(() => {\n    noteService.getAll().then(response => setNotes(response))\n  }, [])\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return <div className='error'>{message}</div>\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science 2019</em>\n      </div>\n    )\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(note.id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => (note.id !== id ? note : response)))\n      })\n      .catch(error => {\n        setErrorMessage(`muistiinpano '${note.content}' poistettu palvelimelta`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => {\n    return notesToShow.map(note => {\n      return (\n        <Note\n          key={note.id}\n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)}\n        />\n      )\n    })\n  }\n\n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    }\n\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          näytä {showAll ? 'vain tärkeät' : 'kaikki'}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type='submit'>tallenna</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}