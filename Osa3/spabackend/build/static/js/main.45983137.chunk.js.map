{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","react_default","a","createElement","className","content","onClick","services_notes","nonExisting","id","date","important","axios","get","then","response","data","concat","newObject","post","put","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","message","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.45983137.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    return(\n        <li className='note'>{note.content} \n        <button onClick={toggleImportance}>change importance</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const nonExisting = {\n    id: 10000,\n    content: 'Tätä muistiinpanoa ei ole palvelimelta',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true\n  }\n\n  return axios.get(baseUrl).then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst App = () => {  \n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState('virhe...')\n\n    useEffect (() => {\n        noteService\n        .getAll()\n        .then(response => setNotes(response))\n\n    }, [])\n\n    const Notification = ({ message }) => {\n        if (message === null) {\n          return null\n        }\n      \n        return (\n          <div className=\"error\">\n            {message}\n          </div>\n        )\n    }\n\n    const Footer = () => {\n        const footerStyle = {\n          color: 'green',\n          fontStyle: 'italic',\n          fontSize: 16\n        }\n      \n        return (\n          <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science 2019</em>\n          </div> \n        )\n    }\n\n    const notesToShow = showAll    \n        ? notes    \n        : notes.filter(note => note.important)\n\n    const toggleImportanceOf = id => {    \n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService\n            .update(note.id, changedNote)      \n            .then(response => {        \n                setNotes(notes.map(note => \n                    note.id !== id ? note : response))      \n            })\n            .catch(error => {      \n                setErrorMessage(          \n                    `muistiinpano '${note.content}' poistettu palvelimelta`\n                )        \n                setTimeout(() => {          \n                    setErrorMessage(null)        \n                }, 5000)    \n                setNotes(notes.filter(n => n.id !== id))    })\n    }\n\n    const rows = () => notesToShow.map(note => \n            <Note \n                key={note.id} \n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )\n\n    \n    \n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5\n        }\n\n        noteService      \n        .create(noteObject)      \n        .then(response => {        \n            setNotes(notes.concat(response.data))        \n            setNewNote('')      \n        })\n    }\n\n    const handleNoteChange = (event) => {   \n        setNewNote(event.target.value)  \n    }\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n      <Notification message={errorMessage} />\n      <div>        \n          <button onClick={() => setShowAll(!showAll)}>          \n            näytä {showAll ? 'vain tärkeät' : 'kaikki' }        \n          </button>      \n      </div>\n      <ul>\n       {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n            value={newNote}\n            onChange={handleNoteChange}\n        />\n        <button type=\"submit\">tallenna</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}